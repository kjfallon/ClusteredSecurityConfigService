<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.syr.eecs.cis.657</groupId>
    <artifactId>clustered-security-configuration-service</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>


    <name>ClusteredSecurityConfigService</name>
    <description>Poll, validate, and apply security configuration metadata from distrubuted consensus datastore and apply it to local OS services</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <profiles>
        <profile>
            <id>localhost</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>localhost</value>
                </property>
            </activation>
            <properties>
                <profileId>localhost</profileId>
                <ssh.deploy.profile>localhost</ssh.deploy.profile>
                <ssh.deploy.url>file:///opt/ClusteredSecurityConfigService</ssh.deploy.url>
                <skip.deploy>true</skip.deploy>
            </properties>
        </profile>

        <profile>
            <id>node1</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>development</value>
                </property>
            </activation>
            <properties>
                <profileId>development</profileId>
                <ssh.deploy.profile>node1-proof-of-concept-hostname</ssh.deploy.profile>
                <ssh.deploy.url>scpexe://node1-proof-of-concept-hostname/opt/ClusteredSecurityConfigService</ssh.deploy.url>
                <skip.deploy>true</skip.deploy>
            </properties>
        </profile>

        <profile>
            <id>node2</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>development</value>
                </property>
            </activation>
            <properties>
                <profileId>development</profileId>
                <ssh.deploy.profile>node2-proof-of-concept-hostname</ssh.deploy.profile>
                <ssh.deploy.url>scpexe://node2-proof-of-concept-hostname/opt/ClusteredSecurityConfigService</ssh.deploy.url>
                <skip.deploy>true</skip.deploy>
            </properties>
        </profile>

        <profile>
            <id>node3</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>development</value>
                </property>
            </activation>
            <properties>
                <profileId>development</profileId>
                <ssh.deploy.profile>node3-proof-of-concept-hostname</ssh.deploy.profile>
                <ssh.deploy.url>scpexe://node3-proof-of-concept-hostname/opt/ClusteredSecurityConfigService</ssh.deploy.url>
                <skip.deploy>true</skip.deploy>
            </properties>
        </profile>

    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>2.6.2</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Directing Boot to use log4j as explained here: https://springframework.guru/using-log4j-2-spring-boot/ -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>1.9.2</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.55</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.atomix.copycat</groupId>
            <artifactId>copycat-server</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>io.atomix.copycat</groupId>
            <artifactId>copycat-client</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>io.atomix.catalyst</groupId>
            <artifactId>catalyst-netty</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>props/${profileId}</directory>
                <targetPath>${basedir}/target</targetPath>
                <includes>
                    <include>*.sql</include>
                    <include>*.xml</include>
                    <include>*.init</include>
                    <include>*.properties</include>
                    <include>*.txt</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>upload-jar</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>${project.artifactId}-${project.version}.jar</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-libs</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>lib/**</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-properties</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>*.properties</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-xml</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>*.xml</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-sql</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>*.sql</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-txt</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>*.txt</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-init-script</id>
                        <phase>install</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                        <configuration>
                            <fromDir>${project.build.directory}</fromDir>
                            <includes>*.init</includes>
                            <url>${ssh.deploy.url}</url>
                            <toDir></toDir>
                            <serverId>${ssh.deploy.profile}</serverId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.10</version>
            </extension>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-file</artifactId>
                <version>2.10</version>
            </extension>
        </extensions>
    </build>


</project>